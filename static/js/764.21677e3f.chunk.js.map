{"version":3,"file":"static/js/764.21677e3f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Contacts/Contacts.module.css?5e71","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","redux/contacts/useContacts.js","components/Contacts/Contacts.jsx","webpack://react-homework-template/./src/components/filter/filter.module.css?56b3","components/filter/filter.jsx","webpack://react-homework-template/./src/components/form/form.module.css?7370","components/form/form.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Contacts_list__R3QeP\",\"items\":\"Contacts_items__H-wtG\",\"content\":\"Contacts_content__28hHp\",\"btn\":\"Contacts_btn__rNftF\"};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterName = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  selectContacts,\n  selectError,\n  selectFilter,\n  selectFilterName,\n  selectIsLoading,\n} from './selectors';\nimport { deleteContactsThunk, addContactsThunk } from 'redux/contacts/thunkApi';\nimport * as actions from 'redux/contacts/filterSlice';\n\nexport const useContacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contactsNameList = useSelector(selectFilterName);\n\n  const addContact = newContact => {\n    dispatch(addContactsThunk(newContact));\n  };\n  const deleteContact = id => {\n    dispatch(deleteContactsThunk(id));\n  };\n  const changeFilter = value => {\n    dispatch(actions.changeFilterName(value));\n  };\n\n  return {\n    contacts,\n    filter,\n    isLoading,\n    error,\n    contactsNameList,\n    addContact,\n    deleteContact,\n    changeFilter,\n  };\n};\n","import React from 'react';\n\nimport css from 'components/Contacts/Contacts.module.css';\nimport { useContacts } from 'redux/contacts/useContacts';\n\nconst Contacts = () => {\n  const { deleteContact, contactsNameList } = useContacts();\n\n  return (\n    <ul className={css.list}>\n      {contactsNameList.map(({ id, name, number }) => (\n        <li className={css.items} key={id}>\n          <p className={css.content}>\n            {name}: {number}\n          </p>\n\n          <button\n            className={css.btn}\n            type=\"button\"\n            onClick={() => deleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"filter_label__2yB5Q\",\"input\":\"filter_input__5Xngh\"};","import React from 'react';\n\nimport css from 'components/filter/filter.module.css';\nimport { useContacts } from 'redux/contacts/useContacts';\n\nconst Filter = () => {\n  const { filter, changeFilter } = useContacts();\n\n  const changeFilterContact = event => {\n    changeFilter(event.target.value);\n  };\n\n  return (\n    <label className={css.label}>\n      Find contacts by name\n      <input\n        className={css.input}\n        type=\"text\"\n        value={filter}\n        onChange={changeFilterContact}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"form_form__hlmC8\",\"label\":\"form_label__AmhRz\",\"input\":\"form_input__bh4-N\",\"btn\":\"form_btn__05dfm\"};","import { useState } from 'react';\n\nimport css from 'components/form/form.module.css';\nimport { useDispatch } from 'react-redux';\nimport { useContacts } from 'redux/contacts/useContacts';\nimport { addContactsThunk } from 'redux/contacts/thunkApi';\n\nexport const Form = () => {\n  const { contacts } = useContacts();\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const existContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (existContact) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContactsThunk({ name, number }));\n  \n    reset();\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    if (name === 'name') setName(value);\n    if (name === 'number') setNumber(value);\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n\n      <label className={css.label}>\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n\n      <button className={css.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","import Contacts from 'components/Contacts/Contacts';\n\nimport { Container } from 'components/container/container';\nimport Filter from 'components/filter/filter';\nimport Form from 'components/form/form';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getContactsThunk } from 'redux/contacts/thunkApi';\nimport { useContacts } from 'redux/contacts/useContacts';\n\nconst ContactPage = () => {\n  const { isLoading, error } = useContacts();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <Form />\n\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <Contacts />\n    </Container>\n  );\n};\n\nexport default ContactPage;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectFilterName","contact","toLowerCase","includes","useContacts","dispatch","useDispatch","useSelector","contactsNameList","addContact","newContact","addContactsThunk","deleteContact","id","deleteContactsThunk","changeFilter","actions","className","css","number","type","onClick","onChange","event","target","useState","setName","setNumber","handleChange","onSubmit","preventDefault","alert","required","useEffect","getContactsThunk"],"sourceRoot":""}